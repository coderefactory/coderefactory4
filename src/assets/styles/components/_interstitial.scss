// short logo animation runs once on page load
@keyframes logo {
  from { transform: translateY(0); }
  to   { transform: translateY(100px); }
}

@keyframes viewport {
  from { transform: scale(1); }
  to   { transform: scale(var(--viewport-scale-end, 30)); }
}

// fallback for no-cssvariables
html.no-cssvariables {
  @keyframes viewport {
    from { transform: scale(1); }
    to   { transform: scale(30); }
  }
}

.layout.setup-interstitial {
  // --viewport-scale-end: 30;

  // header styles
  .header {
    position: absolute;
    animation-duration: 0s;
    animation-delay: 0s;

    &__left {
      #header-logo-viewport {
        width: $header-logo-viewport-width * 5 / 8;
        height: $header-logo-viewport-width * 5 / 8;
        mix-blend-mode: soft-light;
        border-radius: 50%;
        position: absolute;
        left: calc(45vw - #{($header-logo-viewport-width * 5 / 8) / 2});
        top: calc(50vh - #{$spacing-y} - #{($header-logo-viewport-width * 5 / 8) / 2});
        z-index: 1000;
        display: block;
        opacity: 1;
        transition-timing-function: ease-out;
        transition-property: opacity;
        transition-duration: 0.2s;
        transition-delay: 0.75s;

        @include mq(md) {
          width: $header-logo-viewport-width;
          height: $header-logo-viewport-width;
          left: calc(45vw - #{$header-logo-viewport-width / 2});
          top: calc(50vh - #{$spacing-y} - #{$header-logo-viewport-width / 2});
        }

        // when .container maxes out its width
        @media (min-width: $container-max-width / 0.9) {
          left: calc(($container-max-width / 2) - #{$header-logo-viewport-width / 2});
        }

        &::after {
          content: '';
          position: fixed;
          top: 0;
          left: 0;
          width: 100vw;
          height: 100vh;
          z-index: -1;
          background-color: currentColor;
        }

        span {
          width: 100%;
          height: 100%;
          background-color: white;
          border-radius: 50%;
          display: block;
        }
      }

      .header__logo {
        &:before {
          display: none;
        }

        svg {
          left: calc(45vw - #{($header-logo-width * 5 / 8) / 2});
          top: calc(50vh - #{$spacing-y} - #{($header-logo-width * 5 / 8) / 2});
          transform: rotate(0);
          opacity: 1;
          transition-timing-function: cubic-bezier(.49,0,.88,.16), linear;
          // transition-timing-function: ease-in-out;
          transition-property: transform, opacity;
          transition-duration: 0.45s, 0.3s;
          transition-delay: 0s, 0.45s;

          @include mq(md) {
            left: calc(45vw - #{$header-logo-width / 2});
            top: calc(50vh - #{$spacing-y} - #{$header-logo-width / 2});
          }
        }
      }
    }

    &__right {
      opacity: 0;
      transition: opacity 0s;
    }
  }

  // styles for intro panel
  #home .intro__layout {
    display: none;
  }

  // animation initiated on DOMContentLoaded via js
  &.run-interstitial {
    .header {
      &__left {
        #header-logo-viewport {
          opacity: 0;

          span {
            animation-duration: 0.3s;
            // animation-timing-function: cubic-bezier(.14,.28,.38,-0.92);
            animation-timing-function: cubic-bezier(.33,0,1,0);
            animation-delay: 0.45s;
            animation-fill-mode: forwards;
            animation-name: viewport;
          }
        }

        .header__logo svg {
          transform: rotate(720deg);
          opacity: 0;
          // animation-duration: 0.25s;
          // animation-timing-function: cubic-bezier(.1,.14,0,-0.56);
          // animation-delay: 1s;
          // animation-fill-mode: forwards;
          // animation-name: logo;
        }
      }

      &__right {
        transition-duration: 0.3s;
      }
    }
  }
}
